// sortWords.cpp: определяет точку входа для консольного приложения.
//

#include "stdafx.h"
#include <stdio.h>
#include <conio.h>
#include <string.h>
const int m=40, q=200;
int div_by_s(char*,char[][m]);
char* strcat(char* dest, char src[])
{
	char* s=dest;
	while(*dest) dest++;
	while(*src){
		*dest++=*src++;
	}
  *dest='\0';
	return s;
}
int strlen(char* a)
{
	int i=0;
	while(a[i++]) ;
	return i;
}
void strcpy(char* a, char* b)
{
	while(*a++=*b++) ;
}
void outputMatrix(char[][m], int);
void sortWords(char[][m], int);
int repN(char*);
void buildStr(char*,char[][m], int);
int main()
{
	int n;
	char w[q][m], ans[q]="";
	printf("Enter a string:\n");
	//char *s=get_s(q, sizeof(q));
	char s[q];
	gets(s);
	//char s[]="aabbccddeeffgg  aabbccddeeff    aabbccddee aabbccdd aabbcc            aabb aa s";
	//printf("%s\n", s);
	n=div_by_s(s, w);
	sortWords(w, n);
	buildStr(ans, w, n);
	puts(ans);
	getch();
	return 0;
}

int div_by_s(char* s, char w[][m]){
	int n=strlen(s)+1;
	char e[]=" ";
	strcat(s, e);
	int c=0, k=0;
	char t[m];
	for(int i=0; i<n; i++)
	{
		if(s[i]!=' ')
			t[c++]=s[i];
		else
			if(c>0){
				t[c]='\0';
				strcpy(w[k++], t);
				c=0;
			}
	}
	//outputMatrix(w, k);
	/*sortWords(w, k);
	printf("\n\n");
	outputMatrix(w, k);*/
	return k;

	//puts(temp[1]);
	/*int j=0, k=0, fl=1, n=0;
	char sl[m];
	int l=strlen(s);
	while(s[j++]==' ') ;
	for(int i=0; i<l; i++)
	{
		if(s[i]!=' ')
		{
			sl[k++]=s[i];
			fl=1;
		}
		else if(fl)
		{
			fl=0;
			sl[k]=='\0';
			strcpy(w[n++], sl);
			k=0;
		}
		sl[k]='\0';
		strcpy(w[n], sl);
	}
	puts(w[1]);*/ 

}
void sortWords(char w[][m], int n)
{
	char buf[m];
	int keys[n], temp;
	for(int i=0; i<n; i++)
		keys[i]=repN(w[i]);

	for(int i=0; i<n-1; i++)
		for(int j=i+1; j<n; j++)
			if(keys[i]>keys[j])
			{
				strcpy(buf, w[i]);
				strcpy(w[i], w[j]);
				strcpy(w[j], buf);
				temp=keys[i];
				keys[i]=keys[j];
				keys[j]=temp;
			}
}

int repN(char* s)
{
	int l, l1, k=0, fl=1;
	char rs[m]="";
	l=strlen(s);
	for(int i=0; i<l-1; i++)
	{
		for(int j=i+1; j<l; j++)
		{
			fl=1;
			if(s[i]==s[j])
			{
				l1=strlen(rs);
				for(int ij=0; ij<l1; ij++)
					if(s[i]==rs[ij])
						fl=0;
				if(fl)
					rs[k++]=s[i];
			}
			rs[k]='\0';
		}
	}
	return k;
}
void outputMatrix(char a[][m], int u)
{
	for(int i=0; i<u; i++)
	{
		puts(a[i]);
	}
}
void buildStr(char* s, char w[][m], int n)
{
	for(int i=0; i<n; i++)
	{
		strcat(s, strcat(w[i], " "));
	}
}
