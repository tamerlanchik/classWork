//#include "stdafx.h"
#include <conio.h>
#include <stdio.h>
#include <stdlib.h>
//#include <string.h>
const int m=255, q=50;

char* strcat(char*,char*);
int strlen(char*);
void strcpy(char*,char*);
void swapInt(int*,int*);
void swapStr(char*,char*);

int newFile(char*, char*);
int readFile(char*);
int writeFile(char*);

int divideByWords(char*,char[][m]);
void sortWords(char[][m], int);
int repN(char*);
void buildStr(char*,char[][m], int);
void outputMatrix(char[][m], int);


int main()
{
    char inputFN[25], outputFN[25]; char key;

    printf("Enter input file name:\n");
    scanf("%s", inputFN);
    do
    {
        printf("1-Create File\n");
        printf("2-Read file\n");
        printf("3-Sort file\n");
        printf("4-Read new file\n");
        printf("5-Exit\n");
        //scanf("%d", &key);
        key=getch();
        switch(key)
        {
        case '1': writeFile(inputFN); break;
        case '2': readFile(inputFN); break;
        case '3':
            printf("Enter output file name:\n");
            scanf("%s", outputFN);
            newFile(inputFN, outputFN);
            break;
        case '4': readFile(outputFN); break;
        case '5': break;
        }
    }while(key!=5);

    getch();
    return 0;
}

int divideByWords(char* s, char w[][m]){
    int n=strlen(s)+1;
    int letterCounter=0, wordCount=0;
    char temp[m];
    strcat(s, " ");
    for(int i=0; i<n; i++)
    {
        if(s[i]!=' ')
            temp[letterCounter++]=s[i];
        else
            if(letterCounter>0){
                temp[letterCounter]='\0';
                strcpy(w[wordCount++], temp);
                letterCounter=0;
            }
    }
    return wordCount;
}

void sortWords(char w[][m], int n)
{
    int keys[m];
    for(int i=0; i<n; i++)
        keys[i]=repN(w[i]);
    for(int i=0; i<n-1; i++)
        for(int j=i+1; j<n; j++)
            if(keys[i]>keys[j])
            {
                swapStr(w[i], w[j]);
                swapInt(&keys[i], &keys[j]);
            }
}
int repN(char* s)
{
    int l, l1, repCount=0, fl=1;
    char rs[m];
    l=strlen(s);
    for(int i=0; i<l-1; i++)
    {
        for(int j=i+1; j<l; j++)
        {
            fl=1;
            if(s[i]==s[j])
            {
                l1=strlen(rs);
                for(int ij=0; ij<l1; ij++)
                    if(s[i]==rs[ij])
                        fl=0;
                if(fl)
                    rs[repCount++]=s[i];
            }
            rs[repCount]='\0';
        }
    }
    return repCount;
}

void outputMatrix(char a[][m], int u)
{
    for(int i=0; i<u; i++)

    {
        puts(a[i]);
    }
}

void buildStr(char* s, char w[][m], int n)
{
    for(int i=0; i<n; i++)
    {
        strcat(s, strcat(w[i], " "));
    }
}
int newFile(char* inputFN, char* outputFN)
{
    char buf[80];
    char ans[q];
    char w[q][m];
    int n;
    FILE *streamIn;
    FILE *streamOut;
    if((streamIn=fopen(inputFN, "r"))==NULL)
    {
        printf("Error opening input file\n");
        return 1;
    }
    if((streamOut=fopen(outputFN, "w"))==NULL)
    {
        printf("Error opening output file\n");
        return 1;
    }
    while(!feof(streamIn))
    {
        *ans='\0';
        //*buf='\0';
        fgets(buf, 80, streamIn);
        buf[strlen(buf)-2]='\0';

        n=divideByWords(buf, w);
        sortWords(w, n);
        buildStr(ans, w, n);

        puts(ans);
        strcat(ans, "\n");
        if(!fputs(ans, streamOut))
            printf("Success\n\n");
    }
    fclose(streamIn);
    fclose(streamOut);
    return 0;
}

int readFile(char* fn)
{
    FILE *stream;
    char buf[80];
    if((stream=fopen(fn, "r"))==NULL)
    {
        printf("Error opening file\n");
        return 1;
    }
    while(!feof(stream))
    {
        *buf='\0';
        fgets(buf, 80, stream);
        puts(buf);
    }
    fclose(stream);
    return 0;
}
int writeFile(char* fn)
{
    FILE *stream;
    char str[80], ch;
    if((stream=fopen(fn, "w"))==NULL)
    {
        printf("Error opening file\n");
        return 1;
    }
    do{
        printf("Input string: \n");
        gets(str);
        printf("Exit-y/n");
        ch=getch();
        printf("\n");
        if(ch!='y')
            strcat(str, "\n");

        int res=fputs(str, stream);
        if(!res)
            printf("Success write\n");
    }while(ch!='y');
    fclose(stream);
    return 0;
}
char* strcat(char* dest, char* src)
{
    char* s=dest;
    while(*dest) dest++;
    while(*src){
        *dest++=*src++;
    }
    *dest='\0';
    return s;
}
int strlen(char* a)
{
    int i=0;
    while(a[i++]) ;
    return i;
}
void strcpy(char* a, char* b)
{
    while(*a++=*b++) ;
}
void swapInt(int* a, int* b)
{
    int temp=*a;
    *a=*b;
    *b=temp;
}
void swapStr(char* a, char* b)
{
    char* temp=(char*)malloc(strlen(a)+1);
    strcpy(temp, a);
    strcpy(a, b);
    strcpy(b, temp);
}
